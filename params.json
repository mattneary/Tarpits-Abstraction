{"name":"Tarpits & Abstraction","tagline":"A book on abstraction of computation.","body":"Tarpits & Abstraction\r\n=====================\r\nTarpits & Abstraction is a book beginning with a discussion on computation and\r\nthe Lambda Calculus, and then exploring layers of abstraction, and \r\ncross-interpreting until the reader can understand computation\r\nat any layer of abstraction.\r\n\r\nA preliminary print of the book will be maintained on \r\n[Lulu](http://www.lulu.com/content/paperback-book/tarpits-abstraction/14062801).\r\n\r\nThe full table of contents can be viewed in the book pdf located at \r\n`build/pdf/book.pdf`, but the chapter breakdown follows.\r\n\r\n1. Computation - A Grammar and Data Structures\r\n2. Primitive Procedures - Building Blocks for Programs\r\n3. Simulating Logical Devices - Representation of Objects and Rules in FP\r\n4. Interpreting a Language - Evaluating and Parsing\r\n5. A Self-Hosted Language - Bootstrapping and Extending Our Language's Grammar\r\n\r\nCompilation\r\n-----------\r\n\r\nThe Makefile generates LaTeX for all chapters, and then renders an index LaTeX\r\nfile which joins all chapters together. This outputs a pdf to\r\n`build/pdf/book.pdf`, with all LaTeX sources stored in `build/latex`.  Before\r\nreading, verify that it is the newest version by running the following from the\r\n*project root*.\r\n\r\n```sh\r\n$ make\r\n```\r\n\r\nTODO\r\n----\r\n###Defining Symbolic Expressions\r\n- Change `quote` function to allow for `atom?`\r\n\r\n###A Library of Symbolic Functions\r\n- Using conditionals and `cond` function\r\n- Diverse Data Structures\r\n\r\n###Simulating Logical Devices\r\n- Register machines.\r\n\r\n###Pulling Our Language up by Its Bootstraps\r\n- examples of `define` and `set!`\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}